# Application Name and Version - optional. If not used the Component will not be associated to an Application
Application = 'GLOBAL.PangaRabbit.Jenkins Demo App'
Application_Version = '1.0.0'

# Define Component Name, Variant and Version - required
Name = 'GLOBAL.PangaRabbit.Jenkins Demo App'
Variant = '${GIT_BRANCH}'
Version = 'v1.0.0.${BUILD_NUM}-g${SHORT_SHA}'

# Key/Values to associate to the Component Version
[Attributes]
BuildId = "${BUILDID}"                                      # Identifier for the CI job (DERIVED IF NOT SPECIFIED)
BuildNumber = "${BUILD_NUM}"                                # Build number for the CI job (DERIVED IF NOT SPECIFIED)
BuildUrl = "${BUILD_URL}"                                   # Build url for the CI job (DERIVED IF NOT SPECIFIED)
Chart = ""                                                  # Helm Chart for the Component
ChartNamespace = ""                                         # Name space for the Component to be deployed to
ChartRepo = ""                                              # Helm Chart Repo Name
ChartRepoUrl = ""                                           # Helm Chart Repo Url
ChartVersion = ""                                           # Helm Chart version
CustomAction = ""                                           # Custom Action to assign to the Component
DeployAlways = ""                                           # Set the Always Deploy option Y/N, default is N
DockerBuildDate = '${BLDDATE}'
DockerRepo = "${DOCKERREPO}"                                # Registry which the image was pushed to
DockerSha = "${DIGEST}"                                     # Digest for the image (DERIVED IF NOT SPECIFIED)
DockerTag = '${IMAGE_TAG}'
GitBranch = "${GIT_BRANCH}"                                 # Git branch in the git repo (DERIVED IF NOT SPECIFIED)
GitBranchCreateCommit = "${GIT_BRANCH_CREATE_COMMIT}"       # Git commit that the branch was created from (DERIVED IF NOT SPECIFIED)
GitBranchCreateTimestamp = "${GIT_BRANCH_CREATE_TIMESTAMP}" # Timestamp of when the branch was created (DERIVED IF NOT SPECIFIED)
GitBranchParent = "${GIT_BRANCH_PARENT}"                    # The parent branch for the current branch (DERIVED IF NOT SPECIFIED)
GitCommit = "${GIT_COMMIT}"                                 # Git commit that triggered the CI job (DERIVED IF NOT SPECIFIED)
GitCommitAuthors = "${GIT_COMMIT_AUTHORS}"                  # List of committers for the repo (DERIVED IF NOT SPECIFIED)
GitCommittersCnt = "${GIT_COMMITTERS_CNT}"                  # Count of GitCommitAuthors (DERIVED IF NOT SPECIFIED)
GitCommitTimestamp = "${GIT_COMMIT_TIMESTAMP}"              # Timestamp of the current commit (DERIVED IF NOT SPECIFIED)
GitContribPercentage = "${GIT_CONTRIB_PERCENTAGE}"          # GitCommittersCnt / GitTotalCommittersCnt * 100 (DERIVED IF NOT SPECIFIED)
GitLinesAdded = "${GIT_LINES_ADDED}"                        # Lines added since the previous commit (DERIVED IF NOT SPECIFIED)
GitLinesDeleted = "${GIT_LINES_DELETED}"                    # Lines deleted since the previous commit (DERIVED IF NOT SPECIFIED)
GitLinesTotal = "${GIT_LINES_TOTAL}"                        # Total line count for the branch (DERIVED IF NOT SPECIFIED)
GitOrg = "${GIT_ORG}"                                       # Orgranization for the repo (DERIVED IF NOT SPECIFIED)
GitRepo = "${GIT_REPO}"                                     # Git repo that triggered the CI job (DERIVED IF NOT SPECIFIED)
GitRepoProject = "${GIT_REPO_PROJECT}"                      # Project name part of the repository url (DERIVED IF NOT SPECIFIED)
GitTag = "${GIT_TAG)"                                       # Git tag in the git repo (DERIVED IF NOT SPECIFIED)
GitTotalCommittersCnt = "${GIT_TOTAL_COMMITTERS_CNT}"       # Total committers working on this repo
GitUrl = "${GIT_URL}"                                       # Full url to the git repo (DERIVED IF NOT SPECIFIED)
License = ""                                                # License file location in the Git Repo (DERIVED IF NOT SPECIFIED)
operator = ""                                               # Operator name
Readme = ""                                                 # Readme file location in the Git Repo (DERIVED IF NOT SPECIFIED)
ServiceOwner = '${DHUSER}'
ServiceOwnerEmail = 'sacha@pangarabbit.com'
ServiceOwnerPhone = ""                                      # Phone number for the Owner of the Service
Swagger = ""                                                # Swagger/OpenApi file location in the Git Repo (DERIVED IF NOT SPECIFIED)
